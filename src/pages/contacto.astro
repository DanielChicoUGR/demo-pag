---
import Layout from '../layouts/PagesLayout.astro';
import home_img from '../assets/images/home_main.jpg';

import { isValidEmail } from '../utils/utils.ts';
import InstagramIconBotton from 'src/components/InstagramIconBotton.astro';
import TwitterIconBotton from 'src/components/TwitterIconBotton.astro';
---

<Layout title="Que Hacemos" imagePath={home_img}>
  <h1 slot="top" class="text-center">Contáctanos</h1>

  <section class="doble-columna">
    <div class="form-container">
      <h1>Escríbenos</h1>
      <form id="contact-form" class="form-card" action="">
        <p>
          ¿Tienes alguna pregunta? No dudes en escribirnos mediante nuestro formulario de contacto.
          Obtendrás tu respuesta tan pronto como nos sea posible
        </p>
        <div class="input-container">
          <label for="nombre"><strong>Nombre</strong></label>
          <input type="text" id="nombre" name="nombre" placeholder="Ingresa tu nombre" />
          <span class="icon-success hidden">✔</span>
          <span class="icon-error hidden">✖</span>
          <small class="error-message"></small>
        </div>
        <div class="input-container">
          <label for="email"><strong>Email</strong></label>
          <input type="email" id="email" name="email" placeholder="Ingresa tu email" />
          <span class="icon-success hidden">✔</span>
          <span class="icon-error hidden">✖</span>
          <small class="error-message"></small>
        </div>
        <div class="input-container">
          <label for="mensaje"><strong>Mensaje</strong></label>
          <textarea name="mensaje" id="mensaje" cols="30" rows="10" placeholder="Ingresa tu mensaje"
          ></textarea>
          <span class="icon-success hidden">✔</span>
          <span class="icon-error hidden">✖</span>
          <small class="error-message"></small>
        </div>
        <button type="submit">Enviar</button>
      </form>
    </div>

    {/*Segunda Columna */}
    <div class="info-container">
      <h4 class="">Teléfono</h4>
      <span class="icono-texto">
        <svg
          aria-hidden="true"
          class="e-font-icon-svg e-fas-phone-alt"
          viewBox="0 0 512 512"
          xmlns="http://www.w3.org/2000/svg"
          height="14"
          width="14"
          ><path
            d="M497.39 361.8l-112-48a24 24 0 0 0-28 6.9l-49.6 60.6A370.66 370.66 0 0 1 130.6 204.11l60.6-49.6a23.94 23.94 0 0 0 6.9-28l-48-112A24.16 24.16 0 0 0 122.6.61l-104 24A24 24 0 0 0 0 48c0 256.5 207.9 464 464 464a24 24 0 0 0 23.4-18.6l24-104a24.29 24.29 0 0 0-14.01-27.6z"
          ></path></svg
        >
        <p class="texto-icono">958 24 63 01</p>
      </span>
      <h4 class="elementor-heading-title elementor-size-default">Redes sociales</h4>
      <TwitterIconBotton />
      <InstagramIconBotton />
      <h4 class="elementor-heading-title elementor-size-default">Dirección:</h4>
      <!-- <span class="icono-texto"> -->
        {/* <svg
          aria-hidden="true"
          class="e-font-icon-svg e-fas-map-marker-alt"
          viewBox="0 0 384 512"
          xmlns="http://www.w3.org/2000/svg"
          height="14"
          width=14"
          ><path
            d="M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0zM192 272c44.183 0 80-35.817 80-80s-35.817-80-80-80-80 35.817-80 80 35.817 80 80 80z"
          ></path></svg
        >*/}
        <p class="texto-icono">
          Facultad de Ciencias de la Universidad de Granada. Avenida de Fuentenueva s/n. CP 18071,
          Granada.
        </p>
      <!-- </span> -->
    </div>
  </section>

  <script>
    import { isValidEmail } from 'src/utils/utils';

    class FormValidator {
      form: HTMLFormElement;
      fields: string[];

      constructor(form: HTMLFormElement, fields: string[]) {
        this.form = form;
        this.fields = fields;
      }

      initialize(): void {
        this.validateOnEntry();
        this.validateOnSubmit();
      }

      validateOnSubmit(): void {
        this.form.addEventListener('submit', (e) => {
          e.preventDefault();
          this.fields.forEach((field) => {
            const input = document.querySelector(`#${field}`) as HTMLInputElement;
            this.validateFields(input);
          });
        });
      }

      validateOnEntry(): void {
        this.fields.forEach((field) => {
          const input = document.querySelector(`#${field}`) as HTMLInputElement;

          input.addEventListener('input', (event) => {
            this.validateFields(input);
          });
        });
      }

      validateFields(field: HTMLInputElement): void {
        // Check presence of values
        if (field.value.trim() === '') {
          this.setStatus(
            field,
            `${field.previousElementSibling!.innerText} cannot be blank`,
            'error'
          );
        } else {
          this.setStatus(field, null, 'success');
        }

        // check for a valid email address
        if (field.type === 'email') {
          if (isValidEmail(field.value)) {
            this.setStatus(field, null, 'success');
          } else {
            this.setStatus(field, 'Please enter valid email address', 'error');
          }
        }
      }

      setStatus(field: HTMLInputElement, message: string | null, status: string): void {
        const successIcon = field.parentElement!.querySelector('.icon-success') as HTMLElement;
        const errorIcon = field.parentElement!.querySelector('.icon-error') as HTMLElement;
        const errorMessage = field.parentElement!.querySelector('.error-message') as HTMLElement;

        if (status === 'success') {
          if (errorIcon) {
            errorIcon.classList.add('hidden');
          }
          if (errorMessage) {
            errorMessage.innerText = '';
          }
          successIcon.classList.remove('hidden');
          field.classList.remove('input-error');
        }

        if (status === 'error') {
          if (successIcon) {
            successIcon.classList.add('hidden');
          }
          field.parentElement!.querySelector('.error-message')!.innerText = message!;
          errorIcon.classList.remove('hidden');
          field.classList.add('input-error');
        }
      }
    }

    const form = document.querySelector('.form-card') as HTMLFormElement;
    const fields = ['nombre', 'email', 'mensaje'];

    const validator = new FormValidator(form, fields);
    validator.initialize();
  </script>
  <style>
    .form-card {
      box-shadow: 0px 20px 10px 0px rgba(0, 0, 0, 0.2);
      padding: 2em;
      font-size: 14.5px;
      border-radius:;
      color: gray;
      /* 10px 0 15px -10px rgba(0, 0, 0, 0.5), */
      /* -10px 0 15px -10px rgba(0, 0, 0, 0.5); Añade un sombreado a los bordes laterales */
    }
    .form-container {
      width: 60%;
    }
    .info-container {
      width: 30%;
    }
    .input-container {
      margin-bottom: 1em;
    }

    .input-container label {
      display: block;
      margin-bottom: 0.5em;
    }

    .input-container input,
    .input-container textarea {
      width: 100%;
      padding: 0.5em;
      border-radius: 5px; /* Añade bordes redondeados */
      border: 1px solid gray; /* Añade un borde */
    }

    .doble-columna {
      padding: 80px 40px 80px 40px;
      display: flex;
      flex-wrap: wrap;
      box-sizing: border-box;
      grid-template-columns: 1fr 1fr;
      gap: 2rem;
      max-width: 1100px;
      margin-inline: auto;
    }
    .icon-success {
      color: green;
    }
    .icon-error {
      color: red;
    }
    .error-message {
      color: red;
    }

    .icono-texto {
      display: flex;
      align-items: center;
      font-size: large;
      justify-content: start;
    }

    .texto-icono {
      color: black;
      font-size: 14.5px;
      margin-inline: 10px;
    }
  </style>
</Layout>
